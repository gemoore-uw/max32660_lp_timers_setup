<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\max32660_lp_timers_setup.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\max32660_lp_timers_setup.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sun Oct 30 18:06:45 2022
<BR><P>
<H3>Maximum Stack Usage =        200 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; __hardfp_round &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[26]">DMA0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">DMA0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[46]">ContinuousTimer_Handler</a> from main.o(i.ContinuousTimer_Handler) referenced from main.o(i.main)
 <LI><a href="#[26]">DMA0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[27]">DMA1_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[28]">DMA2_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[29]">DMA3_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[21]">FLC_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[22]">GPIO0_IRQHandler</a> from pb.o(i.GPIO0_IRQHandler) referenced from startup_max32660.o(RESET)
 <LI><a href="#[40]">GPIOWAKE_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[17]">I2C0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2e]">I2C1_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from board.o(i.NMI_Handler) referenced from startup_max32660.o(RESET)
 <LI><a href="#[a]">PF_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[42]">PreInit</a> from system_max32660.o(i.PreInit) referenced from startup_max32660.o(.text)
 <LI><a href="#[c]">RSV00_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[e]">RSV01_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[12]">RSV02_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[13]">RSV03_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[14]">RSV04_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[15]">RSV05_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[16]">RSV06_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1c]">RSV07_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1d]">RSV08_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1e]">RSV09_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1f]">RSV10_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[20]">RSV11_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[23]">RSV12_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[24]">RSV13_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[25]">RSV14_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2a]">RSV15_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2b]">RSV16_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2c]">RSV17_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2d]">RSV18_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2f]">RSV19_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[30]">RSV20_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[31]">RSV21_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[32]">RSV22_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[33]">RSV23_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[34]">RSV24_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[35]">RSV25_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[36]">RSV26_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[37]">RSV27_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[38]">RSV28_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[39]">RSV29_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3a]">RSV30_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3b]">RSV31_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3c]">RSV32_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3d]">RSV33_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3e]">RSV34_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3f]">RSV35_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1a]">SPI0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1b]">SPI1_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from mxc_delay.o(i.SysTick_Handler) referenced from startup_max32660.o(RESET)
 <LI><a href="#[f]">TMR0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[10]">TMR1_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[11]">TMR2_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[18]">UART0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[19]">UART1_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[b]">WDT0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[43]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_max32660.o(.text)
 <LI><a href="#[44]">fputc</a> from stdio.o(i.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[45]">gpio_isr_rx_demod</a> from main.o(i.gpio_isr_rx_demod) referenced from main.o(i.main)
 <LI><a href="#[41]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[43]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(.text)
</UL>
<P><STRONG><a name="[a0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[47]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _main_scatterload &rArr; __scatterload &rArr; __main_after_scatterload &rArr; SystemInit &rArr; Board_Init &rArr; Console_Init &rArr; UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5a]"></a>$Super$$__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>

<P><STRONG><a name="[a1]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a2]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a3]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a4]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[a5]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[a6]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FLC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>GPIOWAKE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RSV00_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RSV01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RSV02_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RSV03_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RSV04_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RSV05_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RSV06_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RSV07_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RSV08_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RSV09_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RSV10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RSV11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>RSV12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>RSV13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>RSV14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RSV15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RSV16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>RSV17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>RSV18_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RSV19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>RSV20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>RSV21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RSV22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RSV23_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>RSV24_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RSV25_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RSV26_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>RSV27_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RSV28_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>RSV29_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>RSV30_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>RSV31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>RSV32_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>RSV33_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>RSV34_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>RSV35_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WDT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetRAM
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_ul2f</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ffltul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_init
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = __scatterload &rArr; __main_after_scatterload &rArr; SystemInit &rArr; Board_Init &rArr; Console_Init &rArr; UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a9]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ab]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ac]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2f
</UL>

<P><STRONG><a name="[4c]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[4a]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[58]"></a>_drnd</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, drnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b0]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__main_after_scatterload</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, system_max32660.o(i.$Sub$$__main_after_scatterload))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = __main_after_scatterload &rArr; SystemInit &rArr; Board_Init &rArr; Console_Init &rArr; UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5b]"></a>Board_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, board.o(i.Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Board_Init &rArr; Console_Init &rArr; UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Console_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[5d]"></a>Console_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, board.o(i.Console_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Console_Init &rArr; UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[61]"></a>ContinuousTimer</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, main.o(i.ContinuousTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ContinuousTimer &rArr; TMR_Init &rArr; SYS_TMR_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Enable
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Disable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>ContinuousTimer_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.ContinuousTimer_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ContinuousTimer_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_IntClear
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[22]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pb.o(i.GPIO0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO0_IRQHandler &rArr; GPIO_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>GPIO_Config</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, gpio.o(i.GPIO_Config))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UART_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_TMR_Init
</UL>

<P><STRONG><a name="[67]"></a>GPIO_Handler</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gpio.o(i.GPIO_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>GPIO_IntConfig</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, gpio.o(i.GPIO_IntConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>GPIO_IntEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.GPIO_IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>GPIO_OutClr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.GPIO_OutClr))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>GPIO_OutSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.GPIO_OutSet))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>GPIO_OutToggle</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(i.GPIO_OutToggle))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr_rx_demod
</UL>

<P><STRONG><a name="[84]"></a>GPIO_RegisterCallback</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gpio.o(i.GPIO_RegisterCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_RegisterCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>LED_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LED_Init &rArr; LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[68]"></a>LED_Off</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, led.o(i.LED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutClr
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>LED_On</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, led.o(i.LED_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_On
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutSet
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>LED_Toggle</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, led.o(i.LED_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutToggle
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr_rx_demod
</UL>

<P><STRONG><a name="[97]"></a>LP_ClearWakeStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lp.o(i.LP_ClearWakeStatus))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[96]"></a>LP_DisableBlockDetect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lp.o(i.LP_DisableBlockDetect))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[94]"></a>LP_DisableSRAM1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lp.o(i.LP_DisableSRAM1))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[93]"></a>LP_DisableSRAM2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lp.o(i.LP_DisableSRAM2))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[92]"></a>LP_DisableSRAM3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lp.o(i.LP_DisableSRAM3))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[91]"></a>LP_DisableSysRAM0LightSleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lp.o(i.LP_DisableSysRAM0LightSleep))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[9d]"></a>LP_DisableSysRAM1LightSleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lp.o(i.LP_DisableSysRAM1LightSleep))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up_mcu
</UL>

<P><STRONG><a name="[9e]"></a>LP_DisableSysRAM2LightSleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lp.o(i.LP_DisableSysRAM2LightSleep))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up_mcu
</UL>

<P><STRONG><a name="[9f]"></a>LP_DisableSysRAM3LightSleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lp.o(i.LP_DisableSysRAM3LightSleep))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up_mcu
</UL>

<P><STRONG><a name="[99]"></a>LP_EnableBlockDetect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lp.o(i.LP_EnableBlockDetect))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up_mcu
</UL>

<P><STRONG><a name="[95]"></a>LP_EnableSRAM0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lp.o(i.LP_EnableSRAM0))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[9a]"></a>LP_EnableSRAM1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lp.o(i.LP_EnableSRAM1))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up_mcu
</UL>

<P><STRONG><a name="[9b]"></a>LP_EnableSRAM2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lp.o(i.LP_EnableSRAM2))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up_mcu
</UL>

<P><STRONG><a name="[9c]"></a>LP_EnableSRAM3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lp.o(i.LP_EnableSRAM3))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up_mcu
</UL>

<P><STRONG><a name="[90]"></a>LP_EnableSysRAM1LightSleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lp.o(i.LP_EnableSysRAM1LightSleep))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[8f]"></a>LP_EnableSysRAM2LightSleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lp.o(i.LP_EnableSysRAM2LightSleep))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[8e]"></a>LP_EnableSysRAM3LightSleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lp.o(i.LP_EnableSysRAM3LightSleep))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[98]"></a>LP_EnterSleepMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lp.o(i.LP_EnterSleepMode))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>NVIC_SetRAM</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, nvic_table.o(i.NVIC_SetRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVector
</UL>

<P><STRONG><a name="[71]"></a>NVIC_SetVector</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, nvic_table.o(i.NVIC_SetVector))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_SetVector &rArr; NVIC_SetRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>PB_Init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, pb.o(i.PB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PB_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[42]"></a>PreInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_max32660.o(i.PreInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>SYS_ClockDisable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mxc_sys.o(i.SYS_ClockDisable))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[78]"></a>SYS_ClockEnable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mxc_sys.o(i.SYS_ClockEnable))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UART_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_TMR_Init
</UL>

<P><STRONG><a name="[72]"></a>SYS_Clock_Select</STRONG> (Thumb, 556 bytes, Stack size 24 bytes, mxc_sys.o(i.SYS_Clock_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SYS_Clock_Select &rArr; SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up_mcu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[89]"></a>SYS_SysTick_GetFreq</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mxc_sys.o(i.SYS_SysTick_GetFreq))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>SYS_TMR_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, mxc_sys.o(i.SYS_TMR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYS_TMR_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ClockEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Init
</UL>

<P><STRONG><a name="[79]"></a>SYS_UART_Init</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, mxc_sys.o(i.SYS_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ClockEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, mxc_delay.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler &rArr; mxc_delay_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, system_max32660.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Select
</UL>

<P><STRONG><a name="[59]"></a>SystemInit</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, system_max32660.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SystemInit &rArr; Board_Init &rArr; Console_Init &rArr; UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Select
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ClockDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>

<P><STRONG><a name="[64]"></a>TMR_Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tmr.o(i.TMR_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContinuousTimer
</UL>

<P><STRONG><a name="[62]"></a>TMR_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tmr.o(i.TMR_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContinuousTimer_Handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContinuousTimer
</UL>

<P><STRONG><a name="[65]"></a>TMR_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tmr.o(i.TMR_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContinuousTimer
</UL>

<P><STRONG><a name="[63]"></a>TMR_Init</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, tmr.o(i.TMR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TMR_Init &rArr; SYS_TMR_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_TMR_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContinuousTimer
</UL>

<P><STRONG><a name="[66]"></a>TMR_IntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tmr.o(i.TMR_IntClear))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContinuousTimer_Handler
</UL>

<P><STRONG><a name="[60]"></a>UART_Init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Console_Init
</UL>

<P><STRONG><a name="[82]"></a>UART_WriteByte</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UART_WriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[7c]"></a>__0printf$3</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[b1]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[83]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr_rx_demod
</UL>

<P><STRONG><a name="[7e]"></a>__hardfp_round</STRONG> (Thumb, 194 bytes, Stack size 64 bytes, round.o(i.__hardfp_round))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __hardfp_round &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[44]"></a>fputc</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stdio.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[45]"></a>gpio_isr_rx_demod</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(i.gpio_isr_rx_demod))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_isr_rx_demod &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutToggle
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[41]"></a>main</STRONG> (Thumb, 644 bytes, Stack size 48 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = main &rArr; __hardfp_round &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SysTick_GetFreq
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVector
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_RegisterCallback
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutSet
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutClr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IntEnable
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IntConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up_mcu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_mcu
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContinuousTimer
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[8b]"></a>mxc_delay</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, mxc_delay.o(i.mxc_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = mxc_delay &rArr; mxc_delay_init &rArr; __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_stop
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>mxc_delay_check</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, mxc_delay.o(i.mxc_delay_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mxc_delay_check
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Timeout
</UL>

<P><STRONG><a name="[7a]"></a>mxc_delay_handler</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, mxc_delay.o(i.mxc_delay_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = mxc_delay_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[74]"></a>mxc_delay_start</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, mxc_delay.o(i.mxc_delay_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Timeout
</UL>

<P><STRONG><a name="[75]"></a>mxc_delay_stop</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mxc_delay.o(i.mxc_delay_stop))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Timeout
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_check
</UL>

<P><STRONG><a name="[8c]"></a>power_down_mcu</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(i.power_down_mcu))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = power_down_mcu &rArr; SYS_Clock_Select &rArr; SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Select
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_EnterSleepMode
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_EnableSysRAM3LightSleep
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_EnableSysRAM2LightSleep
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_EnableSysRAM1LightSleep
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_EnableSRAM0
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_DisableSysRAM0LightSleep
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_DisableSRAM3
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_DisableSRAM2
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_DisableSRAM1
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_DisableBlockDetect
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_ClearWakeStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>power_up_mcu</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.power_up_mcu))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = power_up_mcu &rArr; SYS_Clock_Select &rArr; SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Select
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_EnableSRAM3
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_EnableSRAM2
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_EnableSRAM1
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_EnableBlockDetect
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_DisableSysRAM3LightSleep
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_DisableSysRAM2LightSleep
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_DisableSysRAM1LightSleep
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[87]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>mxc_delay_init</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, mxc_delay.o(i.mxc_delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mxc_delay_init &rArr; __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2f
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_start
</UL>

<P><STRONG><a name="[73]"></a>SYS_Clock_Timeout</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, mxc_sys.o(i.SYS_Clock_Timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_stop
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_start
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_check
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Select
</UL>

<P><STRONG><a name="[7d]"></a>_printf_core</STRONG> (Thumb, 436 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
